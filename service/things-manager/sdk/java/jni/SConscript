##
# Things manager service JNI build script
##

Import('env')

# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', exports = 'lib_env')

tm_jni_env = lib_env.Clone()
target_os = env.get('TARGET_OS')
tm_sdk = env.get('SRC_DIR') + '/service/things-manager/sdk'
base_jni = env.get('SRC_DIR') + '/android/android_api/base/jni'

######################################################################
# Build flags
######################################################################
tm_jni_env.AppendUnique(CXXFLAGS = ['-Wall', '-DLINUX', '-DNDEBUG'])
tm_jni_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
tm_jni_env.AppendUnique(LIBPATH = [base_jni+'/../libs/'+env.get('TARGET_ARCH')])
tm_jni_env.PrependUnique(LIBS = ['ocstack-jni', 'TGMSDKLibrary', 'oc', 'octbstack', 'boost_system', 'gnustl_shared', 'compatibility', 'log'])

tm_jni_env.AppendUnique(CPPPATH = [tm_sdk+'/inc', tm_sdk+'/src'])
tm_jni_env.AppendUnique(CPPPATH = [base_jni])
tm_jni_env.AppendUnique(CPPPATH = ['tm/inc', 'tm/src', 'jniutil/inc', 'jniutil/src', '../../../../../extlibs/timer/'])

######################################################################
# Source files and Targets
######################################################################
tm_jni_src = [env.Glob('tm/src/*.cpp'), env.Glob('jniutil/src/*.cpp')]
tm_jni = tm_jni_env.SharedLibrary('things-manager-jni', tm_jni_src)

tm_jni_env.InstallTarget(tm_jni, 'libthings-manager-jni')

# Install the libraries to /libs/<TARGET_ARCH> directory
tm_jni_env.Install(tm_sdk+'/java/libs/'+env.get('TARGET_ARCH'),env.get('BUILD_DIR')+'/libTGMSDKLibrary.so')
tm_jni_env.Install(tm_sdk+'/java/libs/'+env.get('TARGET_ARCH'),tm_jni)

