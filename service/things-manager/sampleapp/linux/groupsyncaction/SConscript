##
# linux sample app  build script
##

Import('env')

# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', 'lib_env')
linux_sample_env = lib_env.Clone()

######################################################################
# Build flags
######################################################################
linux_sample_env.AppendUnique(CPPPATH = ['include'])
linux_sample_env.AppendUnique(CPPPATH = ['../../../sdk/inc'])
linux_sample_env.AppendUnique(CPPPATH = ['../../../sdk/src'])
linux_sample_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall', '-pthread'])
linux_sample_env.AppendUnique(CPPDEFINES = ['LINUX'])
linux_sample_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
linux_sample_env.AppendUnique(LIBS = ['libTGMSDKLibrary', 'oc', 'octbstack', 'libcoap', 'liboc_logger', 'dl', 'pthread'])


######################################################################
#build sampleapp
######################################################################
group = linux_sample_env.Program('group', 'group.cpp')
musicplayer = linux_sample_env.Program('musicplayer', 'musicplayer.cpp')
phone = linux_sample_env.Program('phone', 'phone.cpp')
speaker = linux_sample_env.Program('speaker', 'speaker.cpp')
Alias("GroupApp", group)
Alias("ConCleintApp", musicplayer)
Alias("PhoneApp", phone)
Alias("SpeakerApp", speaker)
env.AppendTarget('GroupApp')
env.AppendTarget('MusicplayerApp')
env.AppendTarget('PhoneApp')
env.AppendTarget('SpeakerApp')
