#******************************************************************
#
# Copyright 2014 Samsung Electronics All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

##
# NotificationManager build script
##

Import('env')

if env.get('RELEASE'):
	env.AppendUnique(CCFLAGS = ['-Os'])
	env.AppendUnique(CPPDEFINES = ['NDEBUG'])
else:
	env.AppendUnique(CCFLAGS = ['-g'])

if env.get('LOGGING'):
	env.AppendUnique(CPPDEFINES = ['-DTB_LOG'])

lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', 'lib_env')
notimgr_env = lib_env.Clone()

target_os = env.get('TARGET_OS')
######################################################################
# Build flags
######################################################################
notimgr_env.AppendUnique(CPPPATH = ['NotificationManager/include'])
notimgr_env.AppendUnique(CPPPATH = ['../../extlibs/cjson'])
notimgr_env.AppendUnique(CPPPATH = ['../../resource/csdk/logger/include'])
notimgr_env.PrependUnique(LIBS = ['oc', 'octbstack', 'oc_logger', 'connectivity_abstraction', 'libcoap'])

if target_os not in ['windows', 'winrt']:
	notimgr_env.AppendUnique(CXXFLAGS = ['-O2', '-g', '-Wall', '-fmessage-length=0', '-std=c++0x'])

if target_os == 'linux':
	notimgr_env.AppendUnique(LIBS = ['pthread'])

if target_os == 'android':
	notimgr_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	notimgr_env.AppendUnique(LIBS = ['gnustl_shared','log'])

	if not env.get('RELEASE'):
		notimgr_env.AppendUnique(LIBS = ['log'])

######################################################################
# Source files and Targets
######################################################################
NOTI_SRC_DIR = 'NotificationManager/src/'
notimgr_src = [
        NOTI_SRC_DIR + 'hosting.c',
        NOTI_SRC_DIR + 'requestHandler.c',
        NOTI_SRC_DIR + 'virtualResource.c']

if target_os == 'android':
        notimgr_src.append(NOTI_SRC_DIR + 'resourceCoordinator_JNI.cpp')

if target_os in ['tizen','android'] :
    notificationsdk = notimgr_env.SharedLibrary('NotificationManager', notimgr_src)
else :
    notificationsdk = notimgr_env.StaticLibrary('NotificationManager', notimgr_src)

notimgr_env.InstallTarget(notificationsdk, 'libResouceHosting')

# Go to build sample apps
SConscript('SampleApp/SConscript')

