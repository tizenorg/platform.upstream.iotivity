##
# mosquitto build script
##
import platform,os
Import('env')

lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/service/third_party_libs.scons', 'lib_env')

mosquitto_env = lib_env.Clone()
target_os = env.get('TARGET_OS')
######################################################################
# Build flags
######################################################################
mosquitto_env.AppendUnique(CPPPATH = ['./'])
if target_os not in ['windows', 'winrt']:
	# strdup() and pselect() require specific extensions to be enabled.
	mosquitto_env.AppendUnique(CPPDEFINES = [('_XOPEN_SOURCE', 600)])
	mosquitto_env.AppendUnique(CFLAGS = ['-Wall', '-ggdb', '-fPIC',
			'-DWITH_TLS', '-DWITH_TLS_PSK', '-DWITH_THREADING'])
######################################################################
# Source files and Targets
######################################################################
mosquitto_src = env.Glob('*.c')

mosquitto = mosquitto_env.StaticLibrary('mosquitto', mosquitto_src)
mosquitto_env.InstallTarget(mosquitto, 'libmosquitto')

SConscript('cpp/SConscript')
