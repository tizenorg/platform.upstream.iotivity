##
# Examples build script
##
Import('env')
# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/resource/third_party_libs.scons', 'lib_env')

ocicuc_env = lib_env.Clone()
######################################################################
# Build flags
######################################################################
ocicuc_env.AppendUnique(CPPPATH = [
		'../../include/',
		'../../csdk/stack/include',
		'../../csdk/ocsocket/include',
		'../../csdk/ocrandom/include',
		'../../csdk/logger/include',
		'../../oc_logger/include'
		])

ocicuc_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
ocicuc_env.PrependUnique(LIBS = ['oc', 'octbstack', 'coap', 'oc_logger'])

target_os = env.get('TARGET_OS')
if target_os not in ['windows', 'winrt']:
	ocicuc_env.AppendUnique(CXXFLAGS = ['-std=c++0x'])

if target_os == 'android':
	ocicuc_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	ocicuc_env.AppendUnique(LIBS = ['boost_program_options', 'boost_thread', 'gnustl_static'])

	if not env.get('RELEASE'):
		ocicuc_env.AppendUnique(LIBS = ['log'])

if target_os == 'darwin':
	ocicuc_env.AppendUnique(LIBS = ['boost_program_options'])

######################################################################
# Source files and Targets
######################################################################
client = ocicuc_env.Program('client', ['client.cpp', 'driver.cpp', 'utility.cpp'])
server = ocicuc_env.Program('server', ['server.cpp', 'driver.cpp', 'utility.cpp', 'light_resource.cpp'])
monoprocess = ocicuc_env.Program('monoprocess', ['monoprocess.cpp', 'driver.cpp', 'utility.cpp', 'light_resource.cpp'])
small_example = ocicuc_env.Program('small_example', ['small_example.cpp', 'driver.cpp', 'utility.cpp'])

Alias("examples_ocicuc", [client, server, monoprocess, small_example])
env.AppendTarget('examples_ocicuc')
