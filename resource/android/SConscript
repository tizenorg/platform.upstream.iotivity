##
# Android Compatibility (static library) build script
##
Import('env')

# Add third party libraries
lib_env = env.Clone()
#SConscript(env.get('SRC_DIR') + '/resource/third_party_libs.scons', 'lib_env')

compatibilitylib_env = lib_env.Clone()
######################################################################
# Build flags
######################################################################
compatibilitylib_env.AppendUnique(CPPPATH = ['../include/'])

target_os = env.get('TARGET_OS')

if target_os == 'android':
	compatibilitylib_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	#oclib_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
	compatibilitylib_env.AppendUnique(LIBS = ['gnustl_static'])

######################################################################
# Source files and Targets
######################################################################
compatibilitylib_src = ['OCAndroid.cpp']

if target_os == 'android':
	static_compatibilitylib = compatibilitylib_env.StaticLibrary('compatibility', compatibilitylib_src)
	compatibilitylib_env.InstallTarget(static_compatibilitylib, 'libcompatibility')
