Project Name: IoTivity
Release Version No. / Label Name: CA_v0.1
API Version: CA_v0.4

Release Description:
Connectivity Abstraction provides a unified approach to send different OIC messages across multiple transports.

Scope of Release:
1. Supported APIs ( please check below APIs)
2. Samples to test Supported APIs.
3. OIC Coding guidelines followed based on the current CSDK source.
4. Multi-Threaded Connectivity abstraction
5. Executed Open Source Verification and Prevent analysis.

The following Connectivity Abstraction API features are supported in this release:

Supported APIs
CAInitialize()
CATerminate()
CAStartListeningServer()
CAStartDiscoveryServer()
CARegisterHandler()
CAhandleRequestResponse()
FindResource()
SendRequest()
SendResponse()
SelectNetwork()
UnselectNetwork()

Non Supported APIs
SendNotification()
AdvertizeResource()
CAGenerateToken()
CADestryToken()
CAGetNetworkInfo()

Type of Release: Source,
Platform OS: Ubuntu 12.0.4 and above:

Connectivity: WIFI only
Preconditions:
1)gcc 4.6.3 and above.
2)glib library (sudo apt-get install libglib2.0-dev)
3)libcoap.a library ( do make @lib/libcoap-4.1.1)

Known and Open Issues:
1) OIC Log, OIC malloc will be removed once name changes applied to OIC Bases code
2) Support only WIFI Interface.
3) URI length is 16 characters.

Nature of Release: Partial

How to Build:
Follow below steps to execute CA Client / server in different systems
Step 1: Build Libcoap library
Make File Location @connectivity\lib\libcoap-4.1.1
Step 2: Build CA library
Make File Location @connectivity\build\linux
Step 3: Samples
Make File Location @connectivity\samples\linux

NOTE: sample.sh script can be used @connectivity\samples\linux for 3 steps together

Execution:
linux$ export LD_LIBRARY_PATH=../../build/out/
linux$ ./out/sample_main

Client Option : d, f, h Client
Server Option : s, h
